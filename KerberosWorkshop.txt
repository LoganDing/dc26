***** Enabling Kerberos Authentication Using Ambari *****

This section describes how to configure Kerberos for strong authentication for Hadoop users and hosts in an Ambari-managed cluster.
You can use Ambari to enable Kerberos for your Hortonworks Cybersecurity Platform (HCP) environment.


** SUMARY **
Checklist: Installing and Configuring the KDC
Ambari is able to configure Kerberos in the cluster to work with an existing MIT KDC, or existing Active Directory installation. This section describes the steps necessary to prepare for this integration.

Optional: Install a new MIT KDC
The following gives a very high level description of the KDC installation process.

Install the JCE for Kerberos
Before enabling Kerberos in the cluster, you must deploy the Java Cryptography Extension (JCE) security policy files on the Ambari Server and on all hosts in the cluster, including the Ambari Server. If you are using OpenJDK, some distributions of the OpenJDK (such as RHEL/CentOS and Ubuntu) come with unlimited strength JCE automatically and therefore, installation of JCE is not required.

Launch the Kerberos Wizard (Automated Setup)
Choose the Kerberos Wizard Automated Setup if you will use an existing MIT KDC or Active Directory, as opposed to managing Kerberos principals and keytabs manually.

Step 1. Install a new MIT KDC (MIT Kerberos v5)
Step 2. Do you already configured your host name for the HDP Sandbox? See your localhost file!!
Step 3. Configure your KDC
Step 4. NOT REQUIRED. Install the JCE for Kerberos
Step 5. 

<------- HERE IS WHERE THE FUN PART BEGINS ------->
** Checklist: Installing and Configuring the KDC
Ambari is able to configure Kerberos in the cluster to work with an existing MIT KDC, or existing Active Directory installation. This section describes the steps necessary to prepare for this integration.

You can choose to have Ambari connect to the KDC and automatically create the necessary Service and Ambari principals, generate and distribute the keytabs (Automated Kerberos Setup). Ambari also provides an advanced option to manually configure Kerberos. If you choose this option, you must create the principals, generate and distribute the keytabs. Ambari will not do this automatically (Manual Kerberos Setup).

Supported Key Distribution Center (KDC) Versions
* Microsoft Active Directory 2008 and above
* MIT Kerberos v5
* FreeIPA 4.x and above

There are five ways to install/configure the KDC:
* Using an existing MIT KDC
* Install a new MIT KDC (See "Optional: Install a new MIT KDC")
* Using an existing IPA
* Using an existing AD
* Using manual Kerberos setup


** Install a new MIT KDC
The following gives a very high level description of the KDC installation process.

1) Install the KDC Server:
1.a)Install a new version of the KDC server:

OS Flavor			Enter:
RHEL/CentOS/Oracle Linux	yum install krb5-server krb5-libs krb5-workstation
SLES				zypper install krb5 krb5-server krb5-client
Ubuntu/Debian			apt-get install krb5-kdc krb5-admin-server

1.b)Using a text editor, open the KDC server configuration file, located by default here: vi /etc/krb5.conf.
1.c)Change the [realms] section of this file by replacing the default "kerberos.example.com" setting for the kdc and admin_server properties with the Fully Qualified Domain Name of the KDC server host. In the following example, "kerberos.example.com" has been replaced with "my.kdc.server".

realms]
 EXAMPLE.COM = {
   kdc = my.kdc.server
   admin_server = my.kdc.server
}

2) Use the utility kdb5_util to create the Kerberos database:

OS Flavor			Enter:
RHEL/CentOS/Oracle Linux	kdb5_util create -s
SLES				kdb5_util create -s
Ubuntu/Debian			krb5_newrealm


3) Start the KDC server and the KDC admin server:

OS Flavor	Enter:
RHEL/CentOS/Oracle Linux 6	
	/etc/rc.d/init.d/krb5kdc start
	/etc/rc.d/init.d/kadmin start

RHEL/CentOS/Oracle Linux 7	
	systemctl start krb5kdc
	systemctl start kadmin

SLES	
	rckrb5kdc start
	rckadmind start

Ubuntu/Debian	
	service krb5-kdc restart
	service krb5-admin-server restart


4) Set up the KDC server to auto-start on boot:

OS Flavor	Enter:
RHEL/CentOS/Oracle Linux 6	
	chkconfig krb5kdc on
	chkconfig kadmin on

RHEL/CentOS/Oracle Linux 7	
	systemctl enable krb5kdc
	systemctl enable kadmin

SLES	
	chkconfig rckrb5kdc on
	chkconfig rckadmind on

Ubuntu/Debian	
	update-rc.d krb5-kdc defaults
	update-rc.d krb5-admin-server defaults



5) Create a Kerberos Admin:
Kerberos principals can be created either on the KDC machine itself or through the network, using an "admin" principal. The following instructions assume you are using the KDC machine and using the kadmin.local command line administration utility. Using kadmin.local on the KDC machine allows you to create principals without needing to create a separate "admin" principal before you start.

5.a)Create a KDC admin by creating an admin principal: kadmin.local -q "addprinc admin/admin".

5.b)Confirm that this admin principal has permissions in the KDC ACL. Using a text editor, open the KDC ACL file:

OS Flavor			Enter:
RHEL/CentOS/Oracle Linux	vi /var/kerberos/krb5kdc/kadm5.acl
SLES				vi /var/lib/kerberos/krb5kdc/kadm5.acl
Ubuntu/Debian			vi /etc/krb5kdc/kadm5.acl


5.c)Ensure that the KDC ACL file includes an entry so to allow the admin principal to administer the KDC for your specific realm. When using a realm that is different than EXAMPLE.COM, be sure there is an entry for the realm you are using. If not present, principal creation will fail. For example, for an admin/admin@HADOOP.COM principal, you should have an entry: */admin@HADOOP.COM *.

5.d)After editing and saving the kadm5.acl file, you must restart the kadmin process:

OS Flavor			Enter:
RHEL/CentOS/Oracle Linux 6	/etc/rc.d/init.d/kadmin restart
RHEL/CentOS/Oracle Linux 7	systemctl restart kadmin
SLES				rckadmind restart
Ubuntu/Debian			service krb5-admin-server restart



*** Install the JCE for Kerberos ***
NOT REQUIRED
Before enabling Kerberos in the cluster, you must deploy the Java Cryptography Extension (JCE) security policy files on the Ambari Server and on all hosts in the cluster, including the Ambari Server. If you are using OpenJDK, some distributions of the OpenJDK (such as RHEL/CentOS and Ubuntu) come with unlimited strength JCE automatically and therefore, installation of JCE is not required.

1) On the Ambari Server, obtain the JCE policy file appropriate for the JDK version in your cluster:

Option		Description:
Oracle JDK 1.8	http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html
Oracle JDK 1.7	http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html

wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip"

2) Save the policy file archive in a temporary location.
3) On Ambari Server and on each host in the cluster, add the unlimited security policy JCE jars to $JAVA_HOME/jre/lib/security/.
For example, run the following to extract the policy jars into the JDK installed on your host:

unzip -o -j -q jce_policy-8.zip -d /usr/jdk64/jdk1.8.0_40/jre/lib/security/

4) Restart Ambari Server: sudo ambari-server restart.




*** Proceed to "Running the Kerberos Security Wizard". ***


*** Launch the Kerberos Wizard (Automated Setup) ***
Choose the Kerberos Wizard Automated Setup if you will use an existing MIT KDC or Active Directory, as opposed to managing Kerberos principals and keytabs manually.

1) Be sure you have installed and configured your KDC and have prepared the JCE on each host in the cluster.
2) Log in to Ambari Web and Browse to Admin > Kerberos.
3) Click "Enable Kerberos" to launch the wizard.
4) Select the type of KDC you are using and confirm you have met the prerequisites.
5) Provide information about the KDC and admin account.
5.a)In the KDC section, enter the following information:
* In the KDC Host field, the IP address or FQDN for the KDC host. Optionally a port number may be included.
* In the Realm name field, the default realm to use when creating service principals.
* (Optional) In the Domains field, provide a list of patterns to use to map hosts in the cluster to the appropriate realm. For example, if your hosts have a common domain in their FQDN such as host1.hortonworks.local and host2.hortonworks.local, you would set this to: .hortonworks.local,hortonworks.local
5.b)In the Kadmin section, enter the following information:
* In the Kadmin Host field, the IP address or FQDN for the KDC administrative host. Optionally a port number may be included.
* The Admin principal and password that will be used to create principals and keytabs.
* (Optional) If you have configured Ambari for encrypted passwords, the Save Admin Credentials option will be enabled. With this option, you can have Ambari store the KDC Admin credentials to use when making cluster changes. Refer to “Managing Admin Credentials” for more information on this option.
6) Modify any advanced Kerberos settings based on your environment.
6.a)(Optional) To manage your Kerberos client krb5.conf manually (and not have Ambari manage the krb5.conf), expand the Advanced krb5-conf section and uncheck the "Manage" option. You must have the krb5.conf configured on each host.
When manually managing the krb5.conf it is recommended to ensure that DNS is not used for looking up KDC, and REALM entries. Relying on DNS can cause negative performance, and functional impact. To ensure that DNS is not used, ensure the following entries are set in the libdefaults section of your configuration.
[libdefaults]
dns_lookup_kdc = false
dns_lookup_realm = false
6.b) (Optional) to configure any additional KDC's to be used for this environment, add an entry for each additional KDC to the realms section of the Advanced krb5-conf's krb5-conf template.
kdc = {{kdc_host}}
kdc = otherkdc.example.com
6.c) (Optional) To not have Ambari install the Kerberos client libraries on all hosts, expand the Advanced kerberos-env section and uncheck the “Install OS-specific Kerberos client package(s)” option. You must have the Kerberos client utilities installed on each host.
6.d) (Optional) If your Kerberos client libraries are in non-standard path locations, expand the Advanced kerberos-env section and adjust the “Executable Search Paths” option.
6.e) (Optional) If your KDC has a password policy, expand the Advanced kerberos-env section and adjust the Password options.
6.f) (Optional) Ambari will test your Kerberos settings by generating a test principal and authenticating with that principal. To customize the test principal name that Ambari will use, expand the Advanced kerberos-env section and adjust the Test Kerberos Principal value. By default, the test principal name is a combination of cluster name and date (${cluster_name}-${short_date}). This test principal will be deleted after the test is complete.
6.g) (Optional) If you need to customize the attributes for the principals Ambari will create, when using Active Directory, see “Customizing the Attribute Template” for more information. When using MIT KDC, you can pass Principal Attributes options in the Advanced kerberos-env section. For example, you can set options related to pre-auth or max. renew life by passing:
-requires_preauth -maxrenewlife "7 days"

7) Proceed with the install.
8) Ambari will install Kerberos clients on the hosts and test access to the KDC by testing that Ambari can create a principal, generate a keytab and distribute that keytab.
9) Customize the Kerberos identities used by Hadoop and proceed to kerberize the cluster.
On the Configure Identities step, be sure to review the principal names, particularly the Ambari Principals on the General tab. These principal names, by default, append the name of the cluster to each of the Ambari principals. You can leave this as default or adjust these by removing the "-${cluster-name}" from principal name string. For example, if your cluster is named HDP and your realm is EXAMPLE.COM, the hdfs principal will be created as hdfs-HDP@EXAMPLE.COM.
10) Confirm your configuration. You can optionally download a CSV file of the principals and keytabs that Ambari will automatically create.
11) Click Next to start the process.
12) After principals have been created and keytabs have been generated and distributed, Ambari updates the cluster configurations, then starts and tests the Services in the cluster.
13) Exit the wizard when complete.
14) Ambari Server communicates with components in the cluster, and now with Kerberos setup, you need to make sure Ambari Server is setup for Kerberos. As part of the automated Kerberos setup process, Ambari Server has been given a keytab and setup is performed. All you need to do is restart Ambari Server for that to take effect. Therefore, restart Ambari Server at this time: ambari-server restart.
